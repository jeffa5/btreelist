var searchIndex = JSON.parse('{\
"btreelist":{"doc":"A tree-based list with heap-allocated contents.","t":"DDDLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BTreeList","Iter","OwnedIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btreelist","clone","clone","clone_into","clone_into","default","eq","extend","first","first_mut","fmt","fmt","fmt","from","from","from","from_iter","get","get_mut","index","index_mut","insert","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","iter","last","last_mut","len","new","next","next","next_back","next_back","pop","pop_back","pop_front","push","push_back","push_front","remove","set","swap","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"btreelist"]],"d":["A list with efficient insert and removal in the middle.","An iterator over items in a <code>BTreeList</code>.","An iterator over items in a <code>BTreeList</code>.","","","","","","","Create a <code>BTreeList</code>.","","","","","","","","Get the first element in the list if it exists.","Get the first element in the list if it exists.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the <code>element</code> at <code>index</code> in the list.","Get the and <code>element</code> at <code>index</code> in the list.","","","Insert the <code>element</code> into the list at <code>index</code>. Returns the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Check if the list is empty.","Create an iterator through the list.","Get the last element in the list if it exists.","Get the last element in the list if it exists.","Get the length of the list.","Construct a new, empty <code>BTreeList</code>.","","","","","Remove and return the last element from the list, if there …","Remove and return the last element from the list, if there …","Remove and return the first element from the list, if …","Push the <code>element</code> onto the back of the list.","Push the <code>element</code> onto the back of the list.","Push the <code>element</code> onto the front of the list.","Removes the element at <code>index</code> from the list if it exists.","Update the <code>element</code> at <code>index</code> in the list, returning the old …","Returns whether the swap was successful.","","","","","","","","","","",""],"i":[0,0,0,2,3,11,2,3,11,0,2,3,2,3,2,2,2,2,2,2,3,11,2,3,11,2,2,2,2,2,2,2,3,11,2,2,3,11,2,2,2,2,2,2,3,11,3,11,2,2,2,2,2,2,2,2,2,2,3,2,3,11,2,3,11,2,3,11],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[]],[[]],[[],2],[[[2,[4]],[2,[4]]],5],[[2,6]],[2,7],[2,7],[[[2,[8]],9],10],[[[3,[8]],9],10],[[[11,[8]],9],10],[[]],[[]],[[]],[6,2],[[2,12],7],[[2,12],7],[[2,12]],[[2,12]],[[2,12],13],[[]],[[]],[[]],[2],[2],[[]],[[]],[2,5],[2,3],[2,7],[2,7],[2,12],[[],2],[3,7],[11,7],[3,7],[11,7],[2,7],[2,7],[2,7],[2],[2],[2],[[2,12],7],[[2,12],13],[[2,12,12],5],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14]],"c":[],"p":[[8,"Clone"],[3,"BTreeList"],[3,"Iter"],[8,"PartialEq"],[15,"bool"],[8,"IntoIterator"],[4,"Option"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"OwnedIter"],[15,"usize"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
